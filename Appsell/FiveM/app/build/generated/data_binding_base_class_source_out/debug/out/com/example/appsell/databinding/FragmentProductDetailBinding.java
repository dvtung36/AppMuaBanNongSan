// Generated by view binder compiler. Do not edit!
package com.example.appsell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.appsell.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final TextView btnConfirm;

  @NonNull
  public final TextView buttonSend;

  @NonNull
  public final EditText editTextWriteComment;

  @NonNull
  public final ConstraintLayout layoutHeader;

  @NonNull
  public final TextView productCost;

  @NonNull
  public final TextView productDescription;

  @NonNull
  public final ImageView productImg;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productType;

  @NonNull
  public final RecyclerView rcComment;

  @NonNull
  public final RecyclerView rcImage;

  @NonNull
  public final RecyclerView rcLikeProduct;

  @NonNull
  public final TextView tvCommentTitle;

  @NonNull
  public final TextView tvProductTitle;

  @NonNull
  public final TextView txtHeader;

  @NonNull
  public final MaterialCardView viewProduct;

  private FragmentProductDetailBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnBack,
      @NonNull TextView btnConfirm, @NonNull TextView buttonSend,
      @NonNull EditText editTextWriteComment, @NonNull ConstraintLayout layoutHeader,
      @NonNull TextView productCost, @NonNull TextView productDescription,
      @NonNull ImageView productImg, @NonNull TextView productName, @NonNull TextView productType,
      @NonNull RecyclerView rcComment, @NonNull RecyclerView rcImage,
      @NonNull RecyclerView rcLikeProduct, @NonNull TextView tvCommentTitle,
      @NonNull TextView tvProductTitle, @NonNull TextView txtHeader,
      @NonNull MaterialCardView viewProduct) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnConfirm = btnConfirm;
    this.buttonSend = buttonSend;
    this.editTextWriteComment = editTextWriteComment;
    this.layoutHeader = layoutHeader;
    this.productCost = productCost;
    this.productDescription = productDescription;
    this.productImg = productImg;
    this.productName = productName;
    this.productType = productType;
    this.rcComment = rcComment;
    this.rcImage = rcImage;
    this.rcLikeProduct = rcLikeProduct;
    this.tvCommentTitle = tvCommentTitle;
    this.tvProductTitle = tvProductTitle;
    this.txtHeader = txtHeader;
    this.viewProduct = viewProduct;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_product_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_confirm;
      TextView btnConfirm = rootView.findViewById(id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.buttonSend;
      TextView buttonSend = rootView.findViewById(id);
      if (buttonSend == null) {
        break missingId;
      }

      id = R.id.editTextWriteComment;
      EditText editTextWriteComment = rootView.findViewById(id);
      if (editTextWriteComment == null) {
        break missingId;
      }

      id = R.id.layout_header;
      ConstraintLayout layoutHeader = rootView.findViewById(id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.product_cost;
      TextView productCost = rootView.findViewById(id);
      if (productCost == null) {
        break missingId;
      }

      id = R.id.product_description;
      TextView productDescription = rootView.findViewById(id);
      if (productDescription == null) {
        break missingId;
      }

      id = R.id.product_img;
      ImageView productImg = rootView.findViewById(id);
      if (productImg == null) {
        break missingId;
      }

      id = R.id.product_name;
      TextView productName = rootView.findViewById(id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.product_type;
      TextView productType = rootView.findViewById(id);
      if (productType == null) {
        break missingId;
      }

      id = R.id.rcComment;
      RecyclerView rcComment = rootView.findViewById(id);
      if (rcComment == null) {
        break missingId;
      }

      id = R.id.rcImage;
      RecyclerView rcImage = rootView.findViewById(id);
      if (rcImage == null) {
        break missingId;
      }

      id = R.id.rcLikeProduct;
      RecyclerView rcLikeProduct = rootView.findViewById(id);
      if (rcLikeProduct == null) {
        break missingId;
      }

      id = R.id.tvCommentTitle;
      TextView tvCommentTitle = rootView.findViewById(id);
      if (tvCommentTitle == null) {
        break missingId;
      }

      id = R.id.tvProductTitle;
      TextView tvProductTitle = rootView.findViewById(id);
      if (tvProductTitle == null) {
        break missingId;
      }

      id = R.id.txt_header;
      TextView txtHeader = rootView.findViewById(id);
      if (txtHeader == null) {
        break missingId;
      }

      id = R.id.view_product;
      MaterialCardView viewProduct = rootView.findViewById(id);
      if (viewProduct == null) {
        break missingId;
      }

      return new FragmentProductDetailBinding((RelativeLayout) rootView, btnBack, btnConfirm,
          buttonSend, editTextWriteComment, layoutHeader, productCost, productDescription,
          productImg, productName, productType, rcComment, rcImage, rcLikeProduct, tvCommentTitle,
          tvProductTitle, txtHeader, viewProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
