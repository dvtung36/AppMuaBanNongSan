// Generated by view binder compiler. Do not edit!
package com.example.appsell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.appsell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPurchaseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView txtAddress;

  @NonNull
  public final TextView txtCost;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtProduct;

  @NonNull
  public final TextView txtType;

  @NonNull
  public final TextView txtUserName;

  private ItemPurchaseBinding(@NonNull LinearLayout rootView, @NonNull TextView txtAddress,
      @NonNull TextView txtCost, @NonNull TextView txtDate, @NonNull TextView txtProduct,
      @NonNull TextView txtType, @NonNull TextView txtUserName) {
    this.rootView = rootView;
    this.txtAddress = txtAddress;
    this.txtCost = txtCost;
    this.txtDate = txtDate;
    this.txtProduct = txtProduct;
    this.txtType = txtType;
    this.txtUserName = txtUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPurchaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPurchaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_purchase, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPurchaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.txtAddress;
      TextView txtAddress = rootView.findViewById(id);
      if (txtAddress == null) {
        break missingId;
      }

      id = R.id.txtCost;
      TextView txtCost = rootView.findViewById(id);
      if (txtCost == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = rootView.findViewById(id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtProduct;
      TextView txtProduct = rootView.findViewById(id);
      if (txtProduct == null) {
        break missingId;
      }

      id = R.id.txtType;
      TextView txtType = rootView.findViewById(id);
      if (txtType == null) {
        break missingId;
      }

      id = R.id.txtUserName;
      TextView txtUserName = rootView.findViewById(id);
      if (txtUserName == null) {
        break missingId;
      }

      return new ItemPurchaseBinding((LinearLayout) rootView, txtAddress, txtCost, txtDate,
          txtProduct, txtType, txtUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
