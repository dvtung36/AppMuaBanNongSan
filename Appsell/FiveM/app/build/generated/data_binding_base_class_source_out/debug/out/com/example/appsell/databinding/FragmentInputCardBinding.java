// Generated by view binder compiler. Do not edit!
package com.example.appsell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.appsell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInputCardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final TextView buttonOffline;

  @NonNull
  public final TextView buttonOnline;

  @NonNull
  public final ConstraintLayout layoutHeader;

  @NonNull
  public final LinearLayout layoutInfo;

  @NonNull
  public final RelativeLayout layoutSpinner;

  @NonNull
  public final LinearLayout layoutTotal;

  @NonNull
  public final LinearLayout layoutType;

  @NonNull
  public final Spinner spinnerBank;

  @NonNull
  public final TextView textViewTotal;

  @NonNull
  public final TextView tvBank;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvNumber;

  @NonNull
  public final TextView txtPayment;

  private FragmentInputCardBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnBack,
      @NonNull TextView buttonOffline, @NonNull TextView buttonOnline,
      @NonNull ConstraintLayout layoutHeader, @NonNull LinearLayout layoutInfo,
      @NonNull RelativeLayout layoutSpinner, @NonNull LinearLayout layoutTotal,
      @NonNull LinearLayout layoutType, @NonNull Spinner spinnerBank,
      @NonNull TextView textViewTotal, @NonNull TextView tvBank, @NonNull TextView tvContent,
      @NonNull TextView tvName, @NonNull TextView tvNumber, @NonNull TextView txtPayment) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.buttonOffline = buttonOffline;
    this.buttonOnline = buttonOnline;
    this.layoutHeader = layoutHeader;
    this.layoutInfo = layoutInfo;
    this.layoutSpinner = layoutSpinner;
    this.layoutTotal = layoutTotal;
    this.layoutType = layoutType;
    this.spinnerBank = spinnerBank;
    this.textViewTotal = textViewTotal;
    this.tvBank = tvBank;
    this.tvContent = tvContent;
    this.tvName = tvName;
    this.tvNumber = tvNumber;
    this.txtPayment = txtPayment;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInputCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInputCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_input_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInputCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.buttonOffline;
      TextView buttonOffline = rootView.findViewById(id);
      if (buttonOffline == null) {
        break missingId;
      }

      id = R.id.buttonOnline;
      TextView buttonOnline = rootView.findViewById(id);
      if (buttonOnline == null) {
        break missingId;
      }

      id = R.id.layout_header;
      ConstraintLayout layoutHeader = rootView.findViewById(id);
      if (layoutHeader == null) {
        break missingId;
      }

      id = R.id.layoutInfo;
      LinearLayout layoutInfo = rootView.findViewById(id);
      if (layoutInfo == null) {
        break missingId;
      }

      id = R.id.layoutSpinner;
      RelativeLayout layoutSpinner = rootView.findViewById(id);
      if (layoutSpinner == null) {
        break missingId;
      }

      id = R.id.layoutTotal;
      LinearLayout layoutTotal = rootView.findViewById(id);
      if (layoutTotal == null) {
        break missingId;
      }

      id = R.id.layoutType;
      LinearLayout layoutType = rootView.findViewById(id);
      if (layoutType == null) {
        break missingId;
      }

      id = R.id.spinnerBank;
      Spinner spinnerBank = rootView.findViewById(id);
      if (spinnerBank == null) {
        break missingId;
      }

      id = R.id.textViewTotal;
      TextView textViewTotal = rootView.findViewById(id);
      if (textViewTotal == null) {
        break missingId;
      }

      id = R.id.tvBank;
      TextView tvBank = rootView.findViewById(id);
      if (tvBank == null) {
        break missingId;
      }

      id = R.id.tvContent;
      TextView tvContent = rootView.findViewById(id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = rootView.findViewById(id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvNumber;
      TextView tvNumber = rootView.findViewById(id);
      if (tvNumber == null) {
        break missingId;
      }

      id = R.id.txtPayment;
      TextView txtPayment = rootView.findViewById(id);
      if (txtPayment == null) {
        break missingId;
      }

      return new FragmentInputCardBinding((RelativeLayout) rootView, btnBack, buttonOffline,
          buttonOnline, layoutHeader, layoutInfo, layoutSpinner, layoutTotal, layoutType,
          spinnerBank, textViewTotal, tvBank, tvContent, tvName, tvNumber, txtPayment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
